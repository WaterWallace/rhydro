% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matrixRotate.R
\name{matrixRotate}
\alias{matrixRotate}
\title{Rotate x,y,z coordinates around an axis}
\usage{
matrixRotate(m, deg = 0, rotateaxis = "z", origin = c(0, 0, 0))
}
\arguments{
\item{m}{dataframe, with columns "x", "y", "z"}

\item{deg}{degrees to rotate (anticlockwise)}

\item{rotateaxis}{char, axis to rotate around, "x", "y" or "z"}

\item{origin}{vector (or dataframe), length 3, origin to rotate around, default 0,0,0}
}
\value{
dataframe, rotated
}
\description{
Rotate x,y,z coordinates around an axis
}
\examples{
m <- data.frame(x = c(2.5,2,3,1), y = c(3,5,10,15), z = c(3,2,1,3))
# plotting y ( chainage ) against x (alignment)
plot(y ~ x, m, xlim = c( min(m$x, m$y) - max( m$x, m$y ) - 10 , max(m$x, m$y)*2 + 10 ) ,
     ylim =c( min(m$x, m$y) - max( m$x, m$y ) - 10 , max(m$x, m$y)*2 + 10 ))
abline (1,0)
abline (v = 0)

# points are rotated around the z (elevation) axis
rotated <- matrixRotate(m,15, rotateaxis = "z")
points(y ~ x, rotated, col="orange")
rotated <- matrixRotate(m,45, rotateaxis = "z")
points(y ~ x, rotated, col="red")
rotated <- matrixRotate(m,180, rotateaxis = "z")
points(y ~ x, rotated, col="blue")


# plotting z (elevation) against y (chainage)
plot(z ~ y, m, xlim = c( min(m$x, m$z) - max( m$x, m$z ) - 10 , max(m$x, m$z)*2 + 10 ) ,
     ylim =c( min(m$x, m$z) - max( m$x, m$z ) - 10 , max(m$x, m$z)*2 + 10 ))
abline (1,0)
abline (v = 0)

rotated <- matrixRotate(m,5, rotateaxis = "x")
points(z ~ y, rotated, col="orange")
rotated <- matrixRotate(m,10, rotateaxis = "x")
points(z ~ y, rotated, col="red")
rotated <- matrixRotate(m,15, rotateaxis = "x")
points(z ~ y, rotated, col="blue")


# plotting z (elevation) against y (chainage)
plot(y ~ x, m, xlim = c( min(m$x, m$z) - max( m$x, m$z ) - 10 , max(m$x, m$z)*2 + 10 ) ,
     ylim =c( min(m$x, m$z) - max( m$x, m$z ) - 10 , max(m$x, m$z)*2 + 10 ))
abline (1,0)
abline (v = 0)

# Rotate around a specific origin, rather than default (0,0,0)
rotated <- matrixRotate(m,15, rotateaxis = "z", origin = m[1,])
points(y ~ x, rotated, col="orange")
}
