% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addTS.R
\name{addTS}
\alias{addTS}
\title{Combines two timeseires together}
\usage{
addTS(
  seriesA,
  seriesB = 0,
  multiA = 1,
  offsetA = 0,
  timeAdjA = 0,
  multiB = 1,
  offsetB = 0,
  timeAdjB = 0,
  combMethod = "Add"
)
}
\arguments{
\item{seriesA}{a dataframe of posixct time, and value (primary var)}

\item{seriesB}{(optional) a dataframe of posixct time, and value}

\item{multiA}{Numeric Multiplier for seriesA}

\item{offsetA}{Numeric Offset for seriesA}

\item{timeAdjA}{Numeric time adjust for seriesA (to subtract from )}

\item{multiB}{Numeric Multiplier for seriesB}

\item{offsetB}{Numeric Offset for seriesB}

\item{timeAdjB}{Numeric time adjust for seriesB (to subtract from )}

\item{combMethod}{"Add", "Subtract", "Multiply", "Divide"}
}
\value{
dataframe listing each gap start, end and duration.
}
\description{
Either adds, subtracts, divides or multiplies
But also can apply transformations to each series before combining
}
\examples{

 # create a df of hourly times
 numPoints <- 50
 # SeriesA
 randomMinutes <- rnorm(numPoints, mean = 120, sd = 30) # create 100 random intervals
 randomMinutes[randomMinutes < 1] <- 1 # set less than 1 minute to 1
 randomMinutes <- as.POSIXct(cumsum(randomMinutes)*60, origin="2021-01-01")

 # build a data frame of times and values
 dfA <- data.frame(Time = randomMinutes,
                 data = cumsum(rnorm(numPoints, mean = 0, sd = 2))   # add a row of random numbers
 )
 # SeriesB
 randomMinutes <- rnorm(numPoints, mean = 120, sd = 30) # create 100 random intervals
 randomMinutes[randomMinutes < 1] <- 1 # set less than 1 minute to 1
 randomMinutes <- as.POSIXct(cumsum(randomMinutes)*60, origin="2021-01-01")

 # build a data frame of times and values
 dfB <- data.frame(Time = randomMinutes,
                   data = cumsum(rnorm(numPoints, mean = 0, sd = 2))   # add a row of random numbers
 )
 # add two timeseries
 addedTS <- addTS(dfA, dfB)
 plot(dfA, xlim=c(min(addedTS$Date), max(addedTS$Date)),
      ylim=c(min(addedTS$TS), max(addedTS$TS)))
 points(dfB, col="red")
 points(addedTS, col="blue")
 # mulitply two timeseries
 multiTS <- addTS(dfA, dfB, combMethod = "Multiply")
 plot(dfA, xlim=c(min(multiTS$Date), max(multiTS$Date)),
      ylim=c(min(multiTS$TS), max(multiTS$TS)))
 points(dfB, col="red")
 points(multiTS, col="blue")
 # multiply a single timeseires by a factor
 multiTS <- addTS(dfA, multiA = 5)
 plot(dfA, xlim=c(min(multiTS$Date), max(multiTS$Date)),
      ylim=c(min(dfA$data, multiTS$TS), max(dfA$data, multiTS$TS)))
 points(multiTS, col="blue")
 # offset a single timeseires by a factor
 multiTS <- addTS(dfA, offsetA = 50)
 plot(dfA, xlim=c(min(multiTS$Date), max(multiTS$Date)),
      ylim=c(min(dfA$data, multiTS$TS), max(dfA$data, multiTS$TS)))
 points(multiTS, col="blue")
 # offset time of a timeseries
 multiTS <- addTS(dfA, timeAdjA =  240)
 plot(dfA, type="l", xlim=c(min(multiTS$Date), max(multiTS$Date)),
      ylim=c(min(dfA$data, multiTS$TS), max(dfA$data, multiTS$TS)))
 lines(multiTS, type="l", col="blue")
 multiTS <- addTS(dfA, timeAdjA =  -60)
 lines(multiTS, col="red")


}
